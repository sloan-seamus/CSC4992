Work on list stuff. Concatenating lists
Understand the // and /= and ** things







1 + "ant"
    TypeError
    The two values are different types


print(1, "ant")
    Valid
    "1 ant" will print


Which of the following will not evaluate to a boolean?
    x = 5
    3 + y < z
    5 in ['a', 'b', 'c', 'd']
    y + x - 13
    os.path.exists(filename)


What will be the result of this line?
    items = ['ant', 'bird', 'cat', 'dog']
    print(items[-2])
        The output will be "cat"

    print(items[-3:-2])
        cat will NOT be included in when printed


Which will create a list with [1, 3, 5]?
    values = [1, 2, 3, 4, 5, 6]

    [1 + 3+ 5]
    [values.index(1), values.index(3), values.index(5)]
    values[:5:2]
    values[0] + values[2] + values[4]
        values[:5:2] will print starting from 5 and take steps downward from 5 by two


What will the output of b be?
    a = [1, 2]
    b = []
    b = b + a
    b = b + a
    a.append(3)
    print b
        [1, 2, 1, 2]
            Lists can be appended onto each other by using the + sign


What will the output be?
    lst = [1, 2, 3]
    myvar = lst[0]
    lst[0] = 18
    print(lst)
    print(myvar)
        lst will print [18, 2, 3]
        myvar will print 1


What is the output?
    plane = ("Passengers", "Luggage") <---- tuple
    plane[1] = "Snakes"
    print(plane)
        TypeError when trying to modify a tuple


What is the output?
for x in [1, 2]:
 for y in [3, x]:
  print(x, y)

      1 3
      1 1
      2 3
      2 2


n = 1
while n < 6
    n2 = n*n
    print(n, " ^ 2", n2)




y = []
w = 10
while w > 0:
    y += [[w]]
    w /= 2
print(y)




x, y, z = 1, 2, 3
print(z)
    output will be 3


can also be done as...
x, y, z = (int(input()) for i in range(3)) <---- now the user can enter three
                                                        different numbers on
                                                         one line


